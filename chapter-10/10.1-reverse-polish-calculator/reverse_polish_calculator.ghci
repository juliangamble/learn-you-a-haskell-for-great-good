import Data.List  

  
--solveRPN :: (Num a, Read a) => String -> a  
:{
solveRPN = head . foldl foldingFunction [] . words
      where   foldingFunction (x:y:ys) "*" = (x * y):ys
              foldingFunction (x:y:ys) "+" = (x + y):ys
              foldingFunction (x:y:ys) "-" = (y - x):ys
              foldingFunction xs numberString = read numberString:xs 
:}
solveRPN "10 4 3 + 2 * -"  
-- -4  
solveRPN "2 3 +"  
--5  
solveRPN "90 34 12 33 55 66 + * - +"  
-- -3947  
solveRPN "90 34 12 33 55 66 + * - + -"  
-- 4037  
solveRPN "90 34 12 33 55 66 + * - + -"  
-- 4037  
solveRPN "90 3 -"  
-- 87 
