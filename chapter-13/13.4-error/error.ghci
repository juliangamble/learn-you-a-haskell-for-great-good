:t Right 4  
--Right 4 :: (Num t) => Either a t  
:t Left "out of cheese error"  
--Left "out of cheese error" :: Either [Char] b  

import Control.Monad.Error
--<interactive>:1:1: warning: [-Wdeprecations]
--    Module ‘Control.Monad.Error’ is deprecated:
--      Use Control.Monad.Except instead

:t strMsg  
--strMsg :: (Error a) => String -> a  
strMsg "boom!" :: String  
--"boom!"  

Left "boom" >>= \x -> return (x+1)  
--Left "boom"  
Right 100 >>= \x -> Left "no way!"  
--Left "no way!"

-- required to show next error
:set -XNoExtendedDefaultRules

Right 3 >>= \x -> return (x + 100)  
--No error here

Right 3 >>= \x -> return (x + 100) :: Either String Int  
--Right 103 


