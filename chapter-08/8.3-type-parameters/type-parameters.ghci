--data Maybe a = Nothing | Just a

Just "Haha"  
--Just "Haha"  
Just 84  
--Just 84  
:t Just "Haha"  
--Just "Haha" :: Maybe [Char]  
:t Just 84  
--Just 84 :: (Num t) => Maybe t  
:t Nothing  
--Nothing :: Maybe a  
Just 10 :: Maybe Double  
--Just 10.0  

:{
data Car = Car { company :: String  
               , model :: String  
               , year :: Int  
               } deriving (Show)  
:}


:{
tellCar :: Car -> String  
tellCar (Car {company = c, model = m, year = y}) = "This " ++ c ++ " " ++ m ++ " was made in " ++ show y 
:}



let stang = Car {company="Ford", model="Mustang", year=1967}  
tellCar stang  
--"This Ford Mustang was made in 1967"  


:{
data Car a b c = Car { company :: a  
                     , model :: b  
                     , year :: c   
                     } deriving (Show)  
:}

:{
tellCar :: (Show a) => Car String String a -> String  
tellCar (Car {company = c, model = m, year = y}) = "This " ++ c ++ " " ++ m ++ " was made in " ++ show y  
:}

tellCar (Car "Ford" "Mustang" 1967)  
--"This Ford Mustang was made in 1967"  
tellCar (Car "Ford" "Mustang" "nineteen sixty seven")  
--"This Ford Mustang was made in \"nineteen sixty seven\""  
:t Car "Ford" "Mustang" 1967  
--Car "Ford" "Mustang" 1967 :: (Num t) => Car [Char] [Char] t  
:t Car "Ford" "Mustang" "nineteen sixty seven"  
--Car "Ford" "Mustang" "nineteen sixty seven" :: Car [Char] [Char] [Char]  


--data (Ord k) => Map k v = ...  

data Vector a = Vector a a a deriving (Show)  

:{
vplus :: (Num t) => Vector t -> Vector t -> Vector t  
(Vector i j k) `vplus` (Vector l m n) = Vector (i+l) (j+m) (k+n)  
:}

:{
vectMult :: (Num t) => Vector t -> t -> Vector t  
(Vector i j k) `vectMult` m = Vector (i*m) (j*m) (k*m)  
:}

:{
scalarMult :: (Num t) => Vector t -> Vector t -> t  
(Vector i j k) `scalarMult` (Vector l m n) = i*l + j*m + k*n 
:}


Vector 3 5 8 `vplus` Vector 9 2 8  
--Vector 12 7 16  
Vector 3 5 8 `vplus` Vector 9 2 8 `vplus` Vector 0 2 3  
--Vector 12 9 19  
Vector 3 9 7 `vectMult` 10  
--Vector 30 90 70  
Vector 4 9 5 `scalarMult` Vector 9.0 2.0 4.0  
--74.0  
Vector 2 9 3 `vectMult` (Vector 4 9 5 `scalarMult` Vector 9 2 4)  
--Vector 148 666 222  


